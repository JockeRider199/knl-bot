generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  modelId                 String         @id @default(uuid())
  id                      String         @unique
  voices                  VoiceChannel[]
  voiceCreationChannelId  String?
  voiceCreationCategoryId String?
  TicketsConfig           TicketsConfig?
  Ticket                  Ticket[]
  Bans                    Ban[]
}

model VoiceChannel {
  modelId String @id @default(uuid())
  id      String @unique
  guild   Guild  @relation(fields: [guildId], references: [id])
  guildId String
  ownerId String

  @@unique(fields: [guildId, id], name: "channel")
}

model TicketsConfig {
  modelId          String   @id @default(uuid())
  guild            Guild    @relation(fields: [guildId], references: [id])
  guildId          String   @unique
  count            Int      @default(0000)
  tickets          Ticket[]
  modRoleId        String
  ticketCategoryId String
}

model Ticket {
  modelId         String         @id @default(uuid())
  channelId       String         @unique
  ownerId         String
  ticketsConfig   TicketsConfig? @relation(fields: [ticketsConfigId], references: [modelId])
  ticketsConfigId String?
  guild           Guild          @relation(fields: [guildId], references: [id])
  guildId         String
  opened          Boolean        @default(true)
}

model Ban {
  modelId  String @id @default(uuid())
  memberId String
  guildId  String
  guild    Guild  @relation(fields: [guildId], references: [id])
  reason   String
  until    BigInt

  @@unique(fields: [memberId, guildId])
}
